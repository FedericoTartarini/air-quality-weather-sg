{"version":3,"sources":["Static/Icons/logo192.png","Components/NavigationBar.js","Views/CurrentReadingsView.js","Hooks/HttpRequest.js","App.js","serviceWorker.js","index.js","Components/Loader.js"],"names":["module","exports","logo","require","NavigationBar","React","useState","navbarOpen","setNavbarOpen","className","to","src","alt","width","type","onClick","viewBox","xmlns","d","Recommendation","lazy","TopImage","CurrentReadings","CurrentReadingsView","dataPSI","dataTmp","dataRH","dataFor2H","dataFor24H","dataPM25","locationUser","RequestedUseLocation","showRequestLocButton","Helmet","name","content","fallback","Loader","useHttpRequest","url","loading","data","error","request","setRequest","useEffect","console","log","axios","get","then","response","catch","split","WikiClimate","WikiPM25","WikiWeather","AboutView","WikiPSI","MapPollutionView","ForecastView","ChartsView","Footer","App","tzOffset","Date","getTimezoneOffset","isoString","now","toISOString","substr","urlRH","urlTmp","urlWeather2H","urlWeather24H","dateString","urlPM25","accuracy","altitude","altitudeAccuracy","heading","latitude","longitude","speed","setLocationUser","setShowRequestLocButton","getCoordinates","position","coords","showError","code","PERMISSION_DENIED","alert","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERR","navigator","permissions","query","result","state","options","enableHighAccuracy","timeout","maximumAge","geolocation","getCurrentPosition","basename","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.153e0a10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo192.9a9969a0.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst logo = require(\"../Static/Icons/logo192.png\");\n\nfunction NavigationBar() {\n  const [navbarOpen, setNavbarOpen] = React.useState(false);\n\n  return (\n    <nav className=\"container mx-auto flex items-center justify-between flex-wrap p-6\">\n      <Link to=\"/\">\n        <div className=\"flex items-center flex-shrink-0\">\n          <img src={logo} alt=\"logo Air Quality and Weather SG\" width={50} />\n          <span className=\"font-semibold text-xl tracking-tight ml-3 w-40\">\n            Air Quality and Weather SG\n          </span>\n        </div>\n      </Link>\n      <div className=\"block xl:hidden\">\n        <button\n          className=\"flex items-center px-3 py-2 border rounded hover:text-gray-700 hover:border-white\"\n          type=\"button\"\n          onClick={() => setNavbarOpen(!navbarOpen)}\n        >\n          <svg\n            className=\"fill-current h-3 w-3\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <title>Menu</title>\n            <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n          </svg>\n        </button>\n      </div>\n      <div\n        className={\n          \"w-full block flex-end xl:flex xl:items-center xl:w-auto\" +\n          (navbarOpen ? \"\" : \" hidden\")\n        }\n        onClick={() => setNavbarOpen(!navbarOpen)}\n      >\n        <div className=\"text-sm xl:flex-grow\">\n          <Link to=\"/\">\n            <span className=\"block mt-4 xl:inline-block xl:mt-0 hover:text-gray-600 ml-4\">\n              Home\n            </span>\n          </Link>\n          <Link to=\"/air-pollution-singapore-haze\">\n            <span className=\"block mt-4 xl:inline-block xl:mt-0 hover:text-gray-600 ml-4\">\n              Charts\n            </span>\n          </Link>\n          <Link to=\"/weather-forecast-singapore\">\n            <span className=\"block mt-4 xl:inline-block xl:mt-0 over:text-gray-600 ml-4\">\n              Forecast\n            </span>\n          </Link>\n          <Link to=\"/map-air-pollution-singapore-haze\">\n            <span className=\"block mt-4 xl:inline-block xl:mt-0 over:text-gray-600 ml-4\">\n              Air Quality Map\n            </span>\n          </Link>\n          <Link to=\"/about-air-quality-and-weather-sg\">\n            <span className=\"block mt-4 xl:inline-block xl:mt-0 over:text-gray-600 ml-4\">\n              About\n            </span>\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavigationBar;\n","import React, { Suspense, lazy } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\n\nimport Loader from \"../Components/Loader\";\n\nconst Recommendation = lazy(() => import(\"../Components/Recommendation\"));\nconst TopImage = lazy(() => import(\"../Components/TopImage\"));\nconst CurrentReadings = lazy(() => import(\"../Components/CurrentReadings\"));\n\nfunction CurrentReadingsView({\n  dataPSI,\n  dataTmp,\n  dataRH,\n  dataFor2H,\n  dataFor24H,\n  dataPM25,\n  locationUser,\n  RequestedUseLocation,\n  showRequestLocButton,\n}) {\n  return (\n    <div>\n      <Helmet>\n        <title>Air quality and Weather Singapore</title>\n        <meta\n          name=\"description\"\n          content=\"This page shows you the current temperature, relative humidity, PM 2.5, PSI readings.\"\n        />\n      </Helmet>\n      <Suspense fallback={<Loader />}>\n        <div className=\"flex\">\n          <TopImage dataPSI={dataPSI} locationUser={locationUser} />\n        </div>\n      </Suspense>\n      <Suspense fallback={<Loader />}>\n        <CurrentReadings\n          dataPSI={dataPSI}\n          dataTmp={dataTmp}\n          dataRH={dataRH}\n          dataFor2H={dataFor2H}\n          dataFor24H={dataFor24H}\n          dataPM25={dataPM25}\n          locationUser={locationUser}\n          RequestedUseLocation={RequestedUseLocation}\n          showRequestLocButton={showRequestLocButton}\n        />\n      </Suspense>\n      <Suspense fallback={<Loader />}>\n        <Recommendation dataPSI={dataPSI} locationUser={locationUser} />\n      </Suspense>\n      <div className=\"container mx-auto my-3 flex-col p-8 items-center justify-center rounded overflow-hidden border shadow-lg\">\n        <div className=\"text-gray-800 mb-2\">\n          <div className=\"font-bold text-md mb-2\">Learn more about:</div>\n          <ul className=\"list-disc list-inside\">\n            <li>\n              <Link to=\"/climate-of-singapore\">Climate of Singapore</Link>\n            </li>\n            <li>\n              <Link to=\"/pollutant-standards-index-singapore\">\n                Pollutant Standards Index (PSI)\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/pm25\">1-h Particular Matter 2.5 µm</Link>\n            </li>\n            <li>\n              <Link to=\"/weather-singapore\">Weather forecast data source</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CurrentReadingsView;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport function useHttpRequest(url) {\n  const [request, setRequest] = useState({\n    loading: false,\n    data: null,\n    error: false,\n  });\n\n  useEffect(() => {\n    setRequest({\n      loading: true,\n      data: null,\n      error: false,\n    });\n    console.log(\"Requesting API data: \" + url);\n    axios\n      .get(url)\n      .then((response) => {\n        setRequest({\n          loading: false,\n          data: response.data,\n          error: false,\n        });\n      })\n      .catch(() => {\n        setRequest({\n          loading: false,\n          data: null,\n          error: true,\n        });\n      });\n  }, [url.split(\":\")[1]]);\n\n  return request;\n}\n","import React, { Suspense, lazy, useState, useEffect } from \"react\";\nimport NavigationBar from \"./Components/NavigationBar\";\nimport CurrentReadingsView from \"./Views/CurrentReadingsView\";\nimport { useHttpRequest } from \"./Hooks/HttpRequest\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Loader from \"./Components/Loader\";\n\nconst WikiClimate = lazy(() => import(\"./Views/WikiClimate\"));\nconst WikiPM25 = lazy(() => import(\"./Views/WikiPM25\"));\nconst WikiWeather = lazy(() => import(\"./Views/WikiWeather\"));\nconst AboutView = lazy(() => import(\"./Views/AboutView\"));\nconst WikiPSI = lazy(() => import(\"./Views/WikiPSI\"));\nconst MapPollutionView = lazy(() => import(\"./Views/MapPollutionView\"));\nconst ForecastView = lazy(() => import(\"./Views/ForecastView\"));\nconst ChartsView = lazy(() => import(\"./Views/ChartsView\"));\nconst Footer = lazy(() => import(\"./Components/Footer\"));\n\nfunction App() {\n  let tzOffset = new Date().getTimezoneOffset(); //offset in milliseconds\n  tzOffset = tzOffset - (480 + tzOffset);\n  let isoString = new Date(Date.now() - tzOffset * 60000)\n    .toISOString()\n    .substr(0, 19);\n\n  const urlRH =\n    \"https://api.data.gov.sg/v1/environment/relative-humidity?date_time=\" +\n    isoString;\n  const urlTmp =\n    \"https://api.data.gov.sg/v1/environment/air-temperature?date_time=\" +\n    isoString;\n  const urlWeather2H =\n    \"https://api.data.gov.sg/v1/environment/2-hour-weather-forecast?date_time=\" +\n    isoString;\n  const urlWeather24H =\n    \"https://api.data.gov.sg/v1/environment/24-hour-weather-forecast?date_time=\" +\n    isoString;\n\n  // if it is midnight I am querying the previous day\n  if (isoString.split(\"T\")[1].split(\":\")[0] === \"00\") {\n    let tzOffset = new Date().getTimezoneOffset(); //offset in milliseconds\n    tzOffset = tzOffset - (360 + tzOffset);\n    isoString = new Date(Date.now() - tzOffset * 60000)\n      .toISOString()\n      .substr(0, 19);\n  }\n\n  const dateString = isoString.split(\"T\")[0];\n  const urlPSI =\n    \"https://api.data.gov.sg/v1/environment/psi?date=\" + dateString;\n  const urlPM25 =\n    \"https://api.data.gov.sg/v1/environment/pm25?date=\" + dateString;\n\n  const dataPSI = useHttpRequest(urlPSI);\n  const dataTmp = useHttpRequest(urlTmp);\n  const dataRH = useHttpRequest(urlRH);\n  const dataPM25 = useHttpRequest(urlPM25);\n  const dataFor2H = useHttpRequest(urlWeather2H);\n  const dataFor24H = useHttpRequest(urlWeather24H);\n\n  const [locationUser, setLocationUser] = useState({\n    loading: false,\n    data: {\n      accuracy: 2678,\n      altitude: null,\n      altitudeAccuracy: null,\n      heading: null,\n      latitude: 1.3271039999999998,\n      longitude: 103.841792,\n      speed: null,\n    },\n    error: false,\n  });\n  const [showRequestLocButton, setShowRequestLocButton] = useState(true);\n\n  // todo for the moment the try and catch below has fixed the issue on Safari but needs to be fixed\n  useEffect(() => {\n    try {\n      navigator.permissions\n        .query({ name: \"geolocation\" })\n        .then(function (result) {\n          if (result.state === \"granted\") {\n            RequestedUseLocation();\n            setShowRequestLocButton(false);\n          } else {\n            console.log(\"permission not granted\");\n          }\n          // Don't do anything if the permission was denied.\n        });\n    } catch {}\n  }, [isoString]);\n\n  function getCoordinates(position) {\n    setLocationUser({\n      loading: false,\n      data: position.coords,\n      error: false,\n    });\n  }\n\n  function showError(error) {\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        alert(\n          \"You denied the request for Geolocation.\\n\" +\n            \"Please allow us to access your location if you want to see the data for your current location.\"\n        );\n        break;\n      case error.POSITION_UNAVAILABLE:\n        alert(\n          \"Location information is unavailable.\\n\" +\n            \"We are assuming you are in the center of Singapore\"\n        );\n        break;\n      case error.TIMEOUT:\n        alert(\n          \"The request to get user location timed out.\\n\" +\n            \"We are assuming you are in the center of Singapore\"\n        );\n        break;\n      case error.UNKNOWN_ERR:\n        alert(\n          \"An unknown error occurred.\\n\" +\n            \"We are assuming you are in the center of Singapore\"\n        );\n        break;\n      default:\n        alert(\n          \"An unknown error occurred.\\n\" +\n            \"We are assuming you are in the center of Singapore\"\n        );\n    }\n  }\n\n  const options = {\n    enableHighAccuracy: true,\n    timeout: 3000,\n    maximumAge: 0,\n  };\n\n  function RequestedUseLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        getCoordinates,\n        showError,\n        options\n      );\n    } else {\n      alert(\"Geolocation is not supported by this browser\");\n    }\n  }\n\n  return (\n    <Router basename=\"/\">\n      <div className=\"relative pb-10 min-h-screen\">\n        <NavigationBar />\n        <Switch>\n          <Route exact path=\"/\">\n            <CurrentReadingsView\n              dataPSI={dataPSI}\n              dataTmp={dataTmp}\n              dataRH={dataRH}\n              dataFor2H={dataFor2H}\n              dataFor24H={dataFor24H}\n              dataPM25={dataPM25}\n              locationUser={locationUser}\n              RequestedUseLocation={RequestedUseLocation}\n              showRequestLocButton={showRequestLocButton}\n            />\n          </Route>\n          <Suspense fallback={<Loader />}>\n            <Route path=\"/air-pollution-singapore-haze\">\n              <ChartsView data={dataPSI} locationUser={locationUser} />\n            </Route>\n            <Route path=\"/weather-forecast-singapore\">\n              <ForecastView dataFor2H={dataFor2H} dataFor24H={dataFor24H} />\n            </Route>\n            <Route path=\"/map-air-pollution-singapore-haze\">\n              <MapPollutionView data={dataPSI} />\n            </Route>\n            <Route path=\"/about-air-quality-and-weather-sg\">\n              <AboutView />\n            </Route>\n            <Route path=\"/pollutant-standards-index-singapore\">\n              <WikiPSI />\n            </Route>\n            <Route path=\"/pm25\">\n              <WikiPM25 />\n            </Route>\n            <Route path=\"/weather-singapore\">\n              <WikiWeather />\n            </Route>\n            <Route path=\"/climate-of-singapore\">\n              <WikiClimate />\n            </Route>\n          </Suspense>\n        </Switch>\n        <Suspense fallback={<Loader />}>\n          <div>\n            <Footer />\n          </div>\n        </Suspense>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./tailwind.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\n\nfunction Loader() {\n  return (\n    <div className=\"container mx-auto\">\n      <div className=\"flex justify-center\">\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Loader;\n"],"sourceRoot":""}