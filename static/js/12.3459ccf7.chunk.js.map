{"version":3,"sources":["Components/TopImage.js","Components/MajorPollutants.js","Components/CurrentValue.js","Components/CurrentForecast.js","Components/CurrentReadings.js","Components/Recommendation.js","Views/CurrentReadingsView.js","Static/Icons/singapore-line.png"],"names":["TopImage","dataPSI","locationUser","content","error","loading","Loader","data","stationName","ClosestStation","name","latestReading","GetLatestReading","description","PollutantClass","className","alt","src","ChooseTopImageSingapore","MajorPollutants","pollutant","icon","size","color","to","GetHelpURL","MapNamePollutants","faQuestionCircle","Fragment","CurrentValue","ReadingAtUserLocation","CurrentForecast","dataFor2H","dataFor24H","station","text","stringForecast","iconSource","Object","entries","items","length","periods","regions","ForecastToIcon","TwoHForecastsAtUserLocation","CurrentReadings","dataTmp","dataRH","dataPM25","RequestedUseLocation","showRequestLocButton","useState","setStation","useEffect","value","undefined","onClick","faCrosshairs","Recommendation","HealthAdvisory","healthy","old","sick","singaporeLine","href","CurrentReadingsView","Helmet","module","exports"],"mappings":"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","file":"static/js/12.3459ccf7.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  ChooseTopImageSingapore,\n  ClosestStation,\n  GetLatestReading,\n  PollutantClass,\n} from \"../Functions/Utils\";\nimport Loader from \"./Loader\";\n\nfunction TopImage({ dataPSI, locationUser }) {\n  let content = \"\";\n\n  if (locationUser.error || dataPSI.error) {\n    // todo provide more meaningful descriptions\n    // todo check here and in other locations these if statements\n    content = <div>Could not fetch API</div>;\n  }\n\n  if (locationUser.loading || dataPSI.loading) {\n    content = <Loader />;\n  }\n\n  if (locationUser.data && dataPSI.data) {\n    const stationName = ClosestStation(dataPSI.data, locationUser.data).name;\n\n    const latestReading = GetLatestReading(stationName, dataPSI.data);\n\n    const description = PollutantClass(\n      latestReading[\"psi_twenty_four_hourly\"],\n      \"psi_twenty_four_hourly\"\n    ).description;\n\n    content = (\n      <div className=\"container mx-auto flex items-center justify-center shadow-lg\">\n        <img\n          // className=\"lg:w-2/6 md:w-3/6 w-5/6 mb-10 object-cover object-center rounded\"\n          className=\"h-48 w-full rounded object-cover shadow-lg\"\n          alt=\"singapore\"\n          src={ChooseTopImageSingapore(description)}\n        />\n      </div>\n    );\n  }\n\n  return content;\n}\n\nexport default TopImage;\n","import React from \"react\";\nimport Loader from \"./Loader\";\nimport {\n  ClosestStation,\n  GetLatestReading,\n  MapNamePollutants,\n  PollutantClass,\n  GetHelpURL,\n} from \"../Functions/Utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nfunction MajorPollutants({ dataPSI, locationUser, pollutant }) {\n  let content = null;\n\n  if (locationUser.error || dataPSI.error) {\n    content = <div>Could not fetch API</div>;\n  }\n\n  if (locationUser.loading || dataPSI.loading) {\n    content = (\n      <div className=\"container mx-auto\">\n        <Loader />\n      </div>\n    );\n  }\n\n  if (locationUser.data && dataPSI.data) {\n    const stationName = ClosestStation(dataPSI.data, locationUser.data).name;\n\n    const latestReading = GetLatestReading(stationName, dataPSI.data);\n\n    content = (\n      <div className=\"p-4 w-1/2 md:mb-0 mb-6 flex flex-col text-center items-center\">\n        <div className=\"w-20 h-20 inline-flex items-center justify-center rounded-full mb-3 flex-shrink-0\">\n          <FontAwesomeIcon\n            icon={PollutantClass(latestReading[pollutant], pollutant).icon}\n            size={\"3x\"}\n            color={PollutantClass(latestReading[pollutant], pollutant).color}\n          />\n        </div>\n        <div className=\"flex-grow\">\n          <Link to={GetHelpURL(pollutant)}>\n            <h2 className=\"text-lg title-font font-medium mb-3\">\n              {MapNamePollutants(pollutant, true)}:{\" \"}\n              <sup>\n                <FontAwesomeIcon icon={faQuestionCircle} />\n              </sup>\n            </h2>\n          </Link>\n          <h2 className=\"text-3xl title-font font-medium mb-3\">\n            {latestReading[pollutant]}\n            {pollutant === \"pm25_one_hourly\" ? (\n              <span className=\"text-sm\">\n                {\" \"}\n                Âµg/m<sup>3</sup>\n              </span>\n            ) : (\n              \"\"\n            )}\n          </h2>\n          <p className=\"leading-relaxed text-base\">\n            {PollutantClass(latestReading[pollutant], pollutant).description}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return <React.Fragment>{content}</React.Fragment>;\n}\n\nexport default MajorPollutants;\n","import React from \"react\";\nimport Loader from \"./Loader\";\nimport { ReadingAtUserLocation } from \"../Functions/Utils\";\n\nfunction CurrentValue({ data, locationUser }) {\n  let content = null;\n\n  if (data.error || locationUser.error) {\n    content = <div>Could not fetch API</div>;\n  }\n\n  if (data.loading && locationUser.loading) {\n    content = <Loader />;\n  }\n\n  if (data.data && locationUser.data) {\n    content = (\n      <span>{ReadingAtUserLocation(data.data, locationUser.data)}</span>\n    );\n  }\n\n  return <React.Fragment>{content}</React.Fragment>;\n}\n\nexport default CurrentValue;\n","import React from \"react\";\nimport {\n  ClosestStation,\n  ForecastToIcon,\n  TwoHForecastsAtUserLocation,\n} from \"../Functions/Utils\";\nimport Loader from \"./Loader\";\n\nfunction CurrentForecast({ dataFor2H, dataFor24H, locationUser, station }) {\n  let content = \"\";\n  if (dataFor2H.error || dataFor24H.error || locationUser.error) {\n    content = <div>Could not fetch API</div>;\n  }\n\n  if (dataFor2H.loading || dataFor24H.loading || locationUser.loading) {\n    content = <Loader />;\n  }\n\n  if (dataFor2H.data && dataFor24H.data && locationUser.data) {\n    let text = \"\";\n    let stringForecast = \"\";\n    let iconSource = \"\";\n\n    if (Object.entries(dataFor2H.data.items[0]).length === 0) {\n      text = \"next 6-h weather forecast\";\n      stringForecast = dataFor24H.data.items[0].periods[0].regions[station];\n      iconSource = ForecastToIcon(stringForecast);\n    } else {\n      text = \"next 2-hour weather forecast\";\n      stringForecast = TwoHForecastsAtUserLocation(\n        dataFor2H.data,\n        ClosestStation(dataFor2H.data, locationUser.data).name\n      );\n      iconSource = ForecastToIcon(stringForecast);\n    }\n\n    content = (\n      <div>\n        <p className=\"text-base leading-relaxed xl:w-2/4 lg:w-3/4 mx-auto\">\n          {text}: {stringForecast}\n        </p>\n        <img\n          className=\"h-12 w-full object-contain my-3\"\n          src={iconSource}\n          alt=\"weather icon\"\n        />\n      </div>\n    );\n  }\n\n  return content;\n}\n\nexport default CurrentForecast;\n","import React, { useState, useEffect } from \"react\";\nimport MajorPollutants from \"./MajorPollutants\";\nimport CurrentValue from \"./CurrentValue\";\nimport { ClosestStation } from \"../Functions/Utils\";\nimport CurrentForecast from \"./CurrentForecast\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCrosshairs } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nfunction CurrentReadings({\n  dataPSI,\n  dataTmp,\n  dataRH,\n  dataFor2H,\n  dataFor24H,\n  dataPM25,\n  locationUser,\n  RequestedUseLocation,\n  showRequestLocButton,\n}) {\n  const [station, setStation] = useState(\"central\");\n\n  useEffect(() => {\n    let value = \"\";\n    if (dataFor2H.data && locationUser.data && dataPSI.data) {\n      value = ClosestStation(dataFor2H.data, locationUser.data).name;\n      if (value === undefined) {\n        value = ClosestStation(dataPSI.data, locationUser.data).name;\n      }\n      setStation(value);\n    }\n  }, [dataFor2H, dataPSI, locationUser]);\n\n  return (\n    <div className=\"container mx-auto my-3 flex px-5 items-center justify-center shadow-lg border rounded\">\n      <section className=\"text-gray-700 body-font flex-grow\">\n        <div className=\"container px-5 py-5 mx-auto\">\n          <div className=\"text-center my-3\">\n            <p className=\"text-base leading-relaxed xl:w-2/4 lg:w-3/4 mx-auto\">\n              Closest weather station:{\" \"}\n              <span className=\"capitalize\">{station}</span>\n              {/*  todo print Novena, Juron, etc. not west, east. Get the info from location metadata */}\n              {/*  todo allow user to select a station */}\n            </p>\n          </div>\n\n          <div\n            className={\n              \"container flex mx-auto justify-center\" +\n              (showRequestLocButton ? \"\" : \" hidden\")\n            }\n          >\n            <button\n              className=\"bg-gray-100 hover:bg-gray-200 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center\"\n              onClick={() => {\n                RequestedUseLocation();\n              }}\n            >\n              Use my location\n              <span className=\"ml-2\">\n                <FontAwesomeIcon icon={faCrosshairs} />\n              </span>\n            </button>\n          </div>\n          {/* horizontal line */}\n          <div className=\"flex my-3 justify-center\">\n            <div className=\"w-16 h-1 rounded-full bg-gray-400 inline-flex\"></div>\n          </div>\n          <div className=\"flex flex-wrap content-between sm:-m-4 -mx-4 my-3\">\n            {/* show also AQI */}\n            <MajorPollutants\n              dataPSI={dataPSI}\n              locationUser={locationUser}\n              pollutant={\"psi_twenty_four_hourly\"}\n            />\n            <MajorPollutants\n              dataPSI={dataPM25}\n              locationUser={locationUser}\n              pollutant={\"pm25_one_hourly\"}\n            />\n          </div>\n          <div className=\"text-center my-5\">\n            <div className=\"flex my-3 justify-center\">\n              <div className=\"w-16 h-1 rounded-full bg-gray-400 inline-flex\"></div>\n            </div>\n            <div className=\"text-base leading-relaxed xl:w-2/4 lg:w-3/4 mx-auto\">\n              <Link to=\"/weather\">\n                Temperature:{\" \"}\n                <CurrentValue data={dataTmp} locationUser={locationUser} />\n                Â°C\n              </Link>\n            </div>\n\n            <div className=\"text-base leading-relaxed xl:w-2/4 lg:w-3/4 mx-auto\">\n              <Link to=\"/weather\">\n                Relative humidity:{\" \"}\n                <CurrentValue data={dataRH} locationUser={locationUser} />%\n              </Link>\n            </div>\n\n            <CurrentForecast\n              locationUser={locationUser}\n              dataFor2H={dataFor2H}\n              dataFor24H={dataFor24H}\n              station={station}\n            />\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default CurrentReadings;\n","import React from \"react\";\nimport singaporeLine from \"../Static/Icons/singapore-line.png\";\nimport {\n  ClosestStation,\n  GetLatestReading,\n  HealthAdvisory,\n  PollutantClass,\n  GetHelpURL,\n} from \"../Functions/Utils\";\nimport Loader from \"./Loader\";\n\nfunction Recommendation({ dataPSI, locationUser }) {\n  let content = \"\";\n\n  if (dataPSI.error) {\n    content = <div>Could not fetch API</div>;\n  }\n\n  if (dataPSI.loading) {\n    content = <Loader />;\n  }\n\n  if (locationUser.data && dataPSI.data) {\n    const stationName = ClosestStation(dataPSI.data, locationUser.data).name;\n\n    const latestReading = GetLatestReading(stationName, dataPSI.data);\n\n    const description = PollutantClass(\n      latestReading[\"psi_twenty_four_hourly\"],\n      \"psi_twenty_four_hourly\"\n    ).description;\n\n    content = (\n      <div className=\"container mx-auto flex-col p-8 items-center justify-center rounded overflow-hidden border shadow-lg\">\n        <div className=\"text-gray-800 mb-2\">\n          <div className=\"font-bold text-md mb-2\">\n            The 24-h Pollutant Standards Index (PSI) is \"{description}\".\n            Advisory for the general public regarding activities outdoors:\n          </div>\n          <p className=\"text-base\">\n            <span className=\"font-bold\">Healthy persons: </span>\n            {HealthAdvisory(description).healthy}\n          </p>\n          <p className=\"text-base\">\n            <span className=\"font-bold\">\n              Elderly, pregnant women, children:{\" \"}\n            </span>\n            {HealthAdvisory(description).old}\n          </p>\n          <p className=\"text-base\">\n            <span className=\"font-bold\">\n              People with lung or heart diseases:{\" \"}\n            </span>\n            {HealthAdvisory(description).sick}\n          </p>\n        </div>\n        <img\n          className=\"w-full mt-3 object-contain\"\n          src={singaporeLine}\n          alt=\"Singapore's line\"\n        />\n        <p className=\"mt-2 text-xs text-center text-gray-800\">\n          This app does not provide medical advice. It is intended for\n          informational purposes only. It is not a substitute for professional\n          medical advice. For more information about the above recommendations\n          visit{\" \"}\n          <a className=\"text-gray-700\" href={GetHelpURL(\"help\")}>\n            NEA's website\n          </a>\n          .\n        </p>\n      </div>\n    );\n  }\n\n  return content;\n}\n\nexport default Recommendation;\n","import React from \"react\";\nimport TopImage from \"../Components/TopImage\";\nimport CurrentReadings from \"../Components/CurrentReadings\";\nimport Recommendation from \"../Components/Recommendation\";\nimport { Helmet } from \"react-helmet\";\n\nfunction CurrentReadingsView({\n  dataPSI,\n  dataTmp,\n  dataRH,\n  dataFor2H,\n  dataFor24H,\n  dataPM25,\n  locationUser,\n  RequestedUseLocation,\n  showRequestLocButton,\n}) {\n  return (\n    <div>\n      <Helmet>\n        <title>Air quality and weather Singapore</title>\n        <meta\n          name=\"description\"\n          content=\"This page shows you the current temperature, relative humidity, PM 2.5, PSI readings.\"\n        />\n      </Helmet>\n      <div className=\"flex\">\n        <TopImage dataPSI={dataPSI} locationUser={locationUser} />\n      </div>\n      <div>\n        <CurrentReadings\n          dataPSI={dataPSI}\n          dataTmp={dataTmp}\n          dataRH={dataRH}\n          dataFor2H={dataFor2H}\n          dataFor24H={dataFor24H}\n          dataPM25={dataPM25}\n          locationUser={locationUser}\n          RequestedUseLocation={RequestedUseLocation}\n          showRequestLocButton={showRequestLocButton}\n        />\n      </div>\n      <div>\n        <Recommendation dataPSI={dataPSI} locationUser={locationUser} />\n      </div>\n    </div>\n  );\n}\n\nexport default CurrentReadingsView;\n","module.exports = __webpack_public_path__ + \"static/media/singapore-line.d67ab07e.png\";"],"sourceRoot":""}