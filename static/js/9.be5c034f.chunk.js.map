{"version":3,"sources":["Static/Images/good-day.jpg","Components/TopImage.js","Components/MajorPollutants.js","Components/CurrentValue.js","Components/CurrentForecast.js","Components/CurrentReadings.js","Components/Recommendation.js","Views/CurrentReadingsView.js","Static/Icons/singapore-line.png"],"names":["module","exports","TopImage","props","className","alt","src","goodDayImg","MajorPollutants","dataPSI","locationUser","pollutant","content","error","loading","Loader","data","stationName","ClosestStation","name","latestReading","GetLatestReading","icon","PollutantClass","size","color","MapNamePollutants","description","onClick","window","open","GetHelpURL","faQuestionCircle","Fragment","CurrentValue","ReadingAtUserLocation","CurrentForecast","dataFor2H","dataFor24H","station","text","stringForecast","iconSource","area_metadata","length","items","periods","regions","ForecastToIcon","TwoHForecastsAtUserLocation","CurrentReadings","dataTmp","dataRH","dataPM25","useState","setStation","useEffect","value","undefined","Recommendation","HealthAdvisory","healthy","old","sick","singaporeLine","CurrentReadingsView","Helmet"],"mappings":"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","file":"static/js/9.be5c034f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/good-day.b612829c.jpg\";","import React from \"react\";\nimport goodDayImg from \"../Static/Images/good-day.jpg\";\n\nfunction TopImage(props) {\n  return (\n    <div className=\"container mx-auto flex items-center justify-center shadow-lg\">\n      {/* todo change image as a function of the time of the day and pollution */}\n      <img\n        // className=\"lg:w-2/6 md:w-3/6 w-5/6 mb-10 object-cover object-center rounded\"\n        className=\"h-48 w-full rounded object-cover\"\n        alt=\"hero\"\n        src={goodDayImg}\n      />\n    </div>\n  );\n}\n\nexport default TopImage;\n","import React from \"react\";\nimport Loader from \"./Loader\";\nimport {\n  ClosestStation,\n  GetHelpURL,\n  GetLatestReading,\n  MapNamePollutants,\n  PollutantClass,\n} from \"../Functions/Utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction MajorPollutants({ dataPSI, locationUser, pollutant }) {\n  let content = null;\n\n  if (dataPSI.error) {\n    content = <div>Could not fetch API</div>;\n  }\n\n  if (dataPSI.loading) {\n    content = (\n      <div className=\"container mx-auto\">\n        <Loader />\n      </div>\n    );\n  }\n\n  if (locationUser.data && dataPSI.data) {\n    const stationName = ClosestStation(dataPSI.data, locationUser.data).name;\n\n    const latestReading = GetLatestReading(stationName, dataPSI.data);\n\n    content = (\n      <div className=\"p-4 w-1/2 md:mb-0 mb-6 flex flex-col text-center items-center\">\n        <div className=\"w-20 h-20 inline-flex items-center justify-center rounded-full mb-3 flex-shrink-0\">\n          <FontAwesomeIcon\n            icon={PollutantClass(latestReading[pollutant], pollutant).icon}\n            size={\"3x\"}\n            color={PollutantClass(latestReading[pollutant], pollutant).color}\n          />\n        </div>\n        <div className=\"flex-grow\">\n          <h2 className=\"text-lg title-font font-medium mb-3\">\n            {MapNamePollutants(pollutant, true)}:\n          </h2>\n          <h2 className=\"text-3xl title-font font-medium mb-3\">\n            {latestReading[pollutant]}\n            {pollutant === \"pm25_one_hourly\" ? (\n              <span className=\"text-sm\">\n                {\" \"}\n                Âµg/m<sup>3</sup>\n              </span>\n            ) : (\n              \"\"\n            )}\n          </h2>\n          <p className=\"leading-relaxed text-base\">\n            {PollutantClass(latestReading[pollutant], pollutant).description}\n          </p>\n          <div onClick={() => window.open(GetHelpURL(pollutant))}>\n            <p className=\"mt-3 mr-2 inline-flex items-center text-sm\">\n              Learn More\n            </p>\n            <FontAwesomeIcon icon={faQuestionCircle} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return <React.Fragment>{content}</React.Fragment>;\n}\n\nexport default MajorPollutants;\n","import React from \"react\";\nimport Loader from \"./Loader\";\nimport {\n  GetHelpURL,\n  GetLatestReading,\n  MapNamePollutants,\n  PollutantClass,\n  ReadingAtUserLocation,\n} from \"../Functions/Utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction CurrentValue({ data, locationUser }) {\n  let content = null;\n\n  if (data.error) {\n    content = <div>Could not fetch API</div>;\n  }\n\n  if (data.loading) {\n    content = <Loader />;\n  }\n\n  if (data.data && locationUser.data) {\n    content = (\n      <span>{ReadingAtUserLocation(data.data, locationUser.data)}</span>\n    );\n  }\n\n  return <React.Fragment>{content}</React.Fragment>;\n}\n\nexport default CurrentValue;\n","import React from \"react\";\nimport {\n  ClosestStation,\n  ForecastToIcon,\n  TwoHForecastsAtUserLocation,\n} from \"../Functions/Utils\";\nimport Loader from \"./Loader\";\n\nfunction CurrentForecast({ dataFor2H, dataFor24H, locationUser, station }) {\n  let content = \"\";\n  if (dataFor2H.error || dataFor24H.error || locationUser.error) {\n    content = <div>Could not fetch API</div>;\n  }\n\n  if (dataFor2H.loading || dataFor24H.loading || locationUser.loading) {\n    content = <Loader />;\n  }\n\n  if (dataFor2H.data && dataFor24H.data && locationUser.data) {\n    let text = \"\";\n    let stringForecast = \"\";\n    let iconSource = \"\";\n\n    if (dataFor2H.data.area_metadata.length === 0) {\n      text = \"next 6-h forecast\";\n      stringForecast = dataFor24H.data.items[0].periods[0].regions[station];\n      iconSource = ForecastToIcon(stringForecast);\n    } else {\n      text = \"next 2-hour forecast\";\n      stringForecast = TwoHForecastsAtUserLocation(\n        dataFor2H.data,\n        ClosestStation(dataFor2H.data, locationUser.data).name\n      );\n      iconSource = ForecastToIcon(stringForecast);\n    }\n\n    content = (\n      <div>\n        <p className=\"text-base leading-relaxed xl:w-2/4 lg:w-3/4 mx-auto\">\n          {text}: {stringForecast}\n        </p>\n        <img\n          className=\"h-12 w-full object-contain my-3\"\n          src={iconSource}\n          alt=\"weather icon\"\n        />\n      </div>\n    );\n  }\n\n  return content;\n}\n\nexport default CurrentForecast;\n","import React, { useState, useEffect } from \"react\";\nimport MajorPollutants from \"./MajorPollutants\";\nimport CurrentValue from \"./CurrentValue\";\nimport {\n  ClosestStation,\n  ForecastToIcon,\n  TwoHForecastsAtUserLocation,\n} from \"../Functions/Utils\";\nimport CurrentForecast from \"./CurrentForecast\";\n\nfunction CurrentReadings({\n  dataPSI,\n  dataTmp,\n  dataRH,\n  dataFor2H,\n  dataFor24H,\n  dataPM25,\n  locationUser,\n}) {\n  const [station, setStation] = useState(\"central\");\n\n  useEffect(() => {\n    let value = \"\";\n    if (dataFor2H.data && locationUser.data && dataPSI.data) {\n      value = ClosestStation(dataFor2H.data, locationUser.data).name;\n      if (value === undefined) {\n        value = ClosestStation(dataPSI.data, locationUser.data).name;\n      }\n      setStation(value);\n    }\n  }, [dataFor2H, dataPSI, locationUser]);\n\n  return (\n    <div className=\"container mx-auto my-3 flex px-5 items-center justify-center shadow-lg border rounded\">\n      <section className=\"text-gray-700 body-font flex-grow\">\n        <div className=\"container px-5 py-5 mx-auto\">\n          <div className=\"text-center my-5\">\n            <p className=\"text-base leading-relaxed xl:w-2/4 lg:w-3/4 mx-auto\">\n              Closest station: {station}\n            </p>\n            <div className=\"flex my-3 justify-center\">\n              <div className=\"w-16 h-1 rounded-full bg-gray-400 inline-flex\"></div>\n            </div>\n          </div>\n          <div className=\"flex flex-wrap content-between sm:-m-4 -mx-4 my-3\">\n            <MajorPollutants\n              dataPSI={dataPSI}\n              locationUser={locationUser}\n              pollutant={\"psi_twenty_four_hourly\"}\n            />\n            <MajorPollutants\n              dataPSI={dataPM25}\n              locationUser={locationUser}\n              pollutant={\"pm25_one_hourly\"}\n            />\n          </div>\n          <div className=\"text-center my-5\">\n            <div className=\"flex my-3 justify-center\">\n              <div className=\"w-16 h-1 rounded-full bg-gray-400 inline-flex\"></div>\n            </div>\n            <div className=\"text-base leading-relaxed xl:w-2/4 lg:w-3/4 mx-auto\">\n              Temperature:{\" \"}\n              <CurrentValue data={dataTmp} locationUser={locationUser} />\n              Â°C\n            </div>\n\n            <div className=\"text-base leading-relaxed xl:w-2/4 lg:w-3/4 mx-auto\">\n              Relative humidity:{\" \"}\n              <CurrentValue data={dataRH} locationUser={locationUser} />%\n            </div>\n            <CurrentForecast\n              locationUser={locationUser}\n              dataFor2H={dataFor2H}\n              dataFor24H={dataFor24H}\n              station={station}\n            />\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default CurrentReadings;\n","import React from \"react\";\nimport singaporeLine from \"../Static/Icons/singapore-line.png\";\nimport {\n  ClosestStation,\n  GetLatestReading,\n  HealthAdvisory,\n  PollutantClass,\n} from \"../Functions/Utils\";\nimport Loader from \"./Loader\";\n\nfunction Recommendation({ dataPSI, locationUser }) {\n  let content = \"\";\n\n  if (dataPSI.error) {\n    content = <div>Could not fetch API</div>;\n  }\n\n  if (dataPSI.loading) {\n    content = <Loader />;\n  }\n\n  if (locationUser.data && dataPSI.data) {\n    const stationName = ClosestStation(dataPSI.data, locationUser.data).name;\n\n    const latestReading = GetLatestReading(stationName, dataPSI.data);\n\n    const description = PollutantClass(\n      latestReading[\"psi_twenty_four_hourly\"],\n      \"psi_twenty_four_hourly\"\n    ).description;\n\n    content = (\n      <div className=\"container mx-auto flex-col p-8 items-center justify-center rounded overflow-hidden border shadow-lg\">\n        <div className=\"px-6 py-4 text-gray-800\">\n          <div className=\"font-bold text-md mb-2\">\n            The 24-h Pollutant Standards Index (PSI) is \"{description}\". It is\n            advised that:\n          </div>\n          <p className=\"text-base\">\n            <span className=\"font-bold\">Healthy persons: </span>\n            {HealthAdvisory(description).healthy}\n          </p>\n          <p className=\"text-base\">\n            <span className=\"font-bold\">\n              Elderly, pregnant women, children:{\" \"}\n            </span>\n            {HealthAdvisory(description).old}\n          </p>\n          <p className=\"text-base\">\n            <span className=\"font-bold\">\n              People with lung or heart diseases:{\" \"}\n            </span>\n            {HealthAdvisory(description).sick}\n          </p>\n        </div>\n        <img\n          className=\"w-full mt-3 object-contain\"\n          src={singaporeLine}\n          alt=\"Singapore's line\"\n        />\n      </div>\n    );\n  }\n\n  return content;\n}\n\n// todo add note below singapore-line saying that recommendations are not medical advices\n\nexport default Recommendation;\n","import React from \"react\";\nimport TopImage from \"../Components/TopImage\";\nimport CurrentReadings from \"../Components/CurrentReadings\";\nimport Recommendation from \"../Components/Recommendation\";\nimport { Helmet } from \"react-helmet\";\n\nfunction CurrentReadingsView({\n  dataPSI,\n  dataTmp,\n  dataRH,\n  dataFor2H,\n  dataFor24H,\n  dataPM25,\n  locationUser,\n}) {\n  return (\n    <div className=\"py-3\">\n      <Helmet>\n        <title>Air quality and weather Singapore</title>\n        <meta\n          name=\"description\"\n          content=\"This page shows you the current temperature, relative humidity, PM 2.5, PSI readings.\"\n        />\n      </Helmet>\n      <div className=\"flex\">\n        <TopImage />\n      </div>\n      <div>\n        <CurrentReadings\n          dataPSI={dataPSI}\n          dataTmp={dataTmp}\n          dataRH={dataRH}\n          dataFor2H={dataFor2H}\n          dataFor24H={dataFor24H}\n          dataPM25={dataPM25}\n          locationUser={locationUser}\n        />\n      </div>\n      <div>\n        <Recommendation dataPSI={dataPSI} locationUser={locationUser} />\n      </div>\n    </div>\n  );\n}\n\nexport default CurrentReadingsView;\n","module.exports = __webpack_public_path__ + \"static/media/singapore-line.d67ab07e.png\";"],"sourceRoot":""}