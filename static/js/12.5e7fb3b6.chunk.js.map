{"version":3,"sources":["Components/LineChartPollutants.js","Components/DropDown.js","Views/ChartsView.js","Components/TableIndicesCategories.js"],"names":["LineChartPollutants","chartHeight","data","pollutants","stationName","footNote","window","innerWidth","dataChart","labels","datasets","label","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","content","error","loading","Loader","items","map","timestamp","split","pollutant","ix","value","readings","MapNamePollutants","className","options","responsive","scales","xAxes","display","scaleLabel","labelString","ticks","major","fontStyle","fontColor","gridLines","yAxes","height","prop","key","DropDown","selected","listItems","setValue","useState","dropDownOpen","setDropDownOpen","DropDownItem","item","onClick","icon","faChevronDown","ChartsView","locationUser","setStationName","useEffect","ClosestStation","name","length","Helmet","TableIndicesCategories","index","style","color"],"mappings":"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","file":"static/js/12.5e7fb3b6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\nimport Loader from \"./Loader\";\r\nimport { MapNamePollutants } from \"../Functions/Utils\";\r\n\r\nfunction LineChartPollutants({ data, pollutants, stationName, footNote }) {\r\n  const { innerWidth: width } = window;\r\n\r\n  let chartHeight;\r\n  if (width > 500) {\r\n    chartHeight = 150;\r\n  } else {\r\n    chartHeight = 250;\r\n  }\r\n\r\n  let dataChart = {\r\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n    datasets: [\r\n      {\r\n        label: \"PSI\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        borderColor: \"rgb(116, 111, 117)\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"rgb(116, 111, 117)\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"rgb(116, 111, 117)\",\r\n        pointHoverBorderColor: \"#ddd\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: [65, 59, 80, 81, 56, 55, 40],\r\n      },\r\n      {\r\n        label: \"PSI\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        borderColor: \"#9467bd\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#9467bd\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#9467bd\",\r\n        pointHoverBorderColor: \"#ddd\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: [65, 59, 80, 81, 56, 55, 40],\r\n      },\r\n      {\r\n        label: \"PSI\",\r\n        fill: false,\r\n        lineTension: 0.1,\r\n        borderColor: \"#8c564b\",\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#8c564b\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#8c564b\",\r\n        pointHoverBorderColor: \"#ddd\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: [65, 59, 80, 81, 56, 55, 40],\r\n      },\r\n    ],\r\n  };\r\n\r\n  let content = null;\r\n\r\n  if (data.error) {\r\n    content = <div>Could not fetch API</div>;\r\n  }\r\n\r\n  if (data.loading) {\r\n    content = <Loader />;\r\n  }\r\n\r\n  if (data.data) {\r\n    dataChart.labels = data.data.items.map(\r\n      (label) => label.timestamp.split(\"T\")[1].split(\":\")[0]\r\n    );\r\n\r\n    pollutants.map((pollutant, ix) => {\r\n      dataChart.datasets[ix].data = data.data.items.map(\r\n        (value) => value.readings[pollutant][stationName]\r\n      );\r\n      dataChart.datasets[ix].label = MapNamePollutants(pollutant, false);\r\n    });\r\n\r\n    // dataChart.datasets[3].data = data.data.items.map((value) => 50);\r\n\r\n    content = (\r\n      <div className=\"container mx-auto my-3 p-4 shadow-lg border rounded\">\r\n        <Line\r\n          data={dataChart}\r\n          options={{\r\n            responsive: true,\r\n            scales: {\r\n              xAxes: [\r\n                {\r\n                  display: true,\r\n                  scaleLabel: {\r\n                    display: true,\r\n                    labelString: \"Hour\",\r\n                  },\r\n                  ticks: {\r\n                    major: {\r\n                      fontStyle: \"bold\",\r\n                      fontColor: \"#FF0000\",\r\n                    },\r\n                  },\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n                },\r\n              ],\r\n              yAxes: [\r\n                {\r\n                  display: true,\r\n                  scaleLabel: {\r\n                    display: true,\r\n                    labelString: \"Sub-index value\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          }}\r\n          height={chartHeight}\r\n        />\r\n        {footNote.map((prop) => (\r\n          <p key={prop} className=\"text-xs text-center text-gray-800\">\r\n            {prop}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div>{content}</div>;\r\n}\r\n\r\nexport default LineChartPollutants;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction DropDown({ selected, listItems, setValue }) {\r\n  const [dropDownOpen, setDropDownOpen] = useState(false);\r\n\r\n  function DropDownItem({ item }) {\r\n    return (\r\n      <span\r\n        className=\"block py-1 px-8 hover:bg-gray-200 capitalize\"\r\n        onClick={() => {\r\n          setDropDownOpen(!dropDownOpen);\r\n          setValue(item);\r\n        }}\r\n      >\r\n        {item}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <button\r\n        className=\"bg-gray-100 hover:bg-gray-200 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center\"\r\n        onClick={() => setDropDownOpen(!dropDownOpen)}\r\n      >\r\n        <span className=\"capitalize mx-2\">{selected}</span>\r\n        <FontAwesomeIcon icon={faChevronDown} />\r\n      </button>\r\n      <div\r\n        className={\r\n          \"bg-gray-100 absolute right-0 rounded mt-1 py-1 text-center shadow-md\" +\r\n          (dropDownOpen ? \"\" : \" hidden\")\r\n        }\r\n      >\r\n        {listItems.map((item) => (\r\n          <DropDownItem key={item} item={item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DropDown;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport LineChartPollutants from \"../Components/LineChartPollutants\";\r\nimport TableIndicesCategories from \"../Components/TableIndicesCategories\";\r\nimport { ClosestStation } from \"../Functions/Utils\";\r\nimport Loader from \"../Components/Loader\";\r\nimport DropDown from \"../Components/DropDown\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction ChartsView({ data, locationUser }) {\r\n  // todo also add temperature and relative humidity chart\r\n  const [stationName, setStationName] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (locationUser.data && data.data) {\r\n      setStationName(ClosestStation(data.data, locationUser.data).name);\r\n    }\r\n  }, [data.data, locationUser.data]);\r\n\r\n  let content = \"\";\r\n\r\n  if (data.error) {\r\n    content = (\r\n      <div className=\"flex justify-center content-center\">\r\n        <p className=\"p-5\">\r\n          data.gov.sg is under maintenance and we could not download the\r\n          data to generate the plots. Please try again later. Sorry for the inconvenience.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (data.loading || locationUser.loading) {\r\n    content = <Loader />;\r\n  }\r\n\r\n  if (locationUser.data && data.data) {\r\n    if (data.data.items.length !== 0 && stationName) {\r\n      content = (\r\n        <div className=\"container mx-auto\">\r\n          <Helmet>\r\n            <title>Historical pollution data</title>\r\n            <meta\r\n              name=\"description\"\r\n              content=\"This page shows you the concentrations, over the last 24 hours, of the major outdoor\r\n      pollutants: Particulate matter (PM10 and PM2.5), Ozone (O3), Nitrogen Oxide (NOx), Sulfur Oxide (SOx) and Carbon\r\n      Monoxide in Singapore.\"\r\n            />\r\n          </Helmet>\r\n          <div className=\"flex justify-center content-center\">\r\n            <p className=\"py-2 mr-2\">Pollution last 24-h. Station:</p>\r\n            <DropDown\r\n              selected={stationName}\r\n              listItems={[\"north\", \"south\", \"central\", \"east\", \"west\"]}\r\n              setValue={setStationName}\r\n            />\r\n          </div>\r\n          <LineChartPollutants\r\n            data={data}\r\n            pollutants={[\r\n              \"pm10_sub_index\",\r\n              \"pm25_sub_index\",\r\n              \"no2_one_hour_max\",\r\n            ]}\r\n            stationName={stationName}\r\n            footNote={[\r\n              \"* computed on 24-hour average Particulate Matter (PM) 10 reading (µg/m3)\",\r\n              \"** computed on 24-hour average Particulate Matter (PM) 2.5 reading (µg/m3)\",\r\n            ]}\r\n          />\r\n          <LineChartPollutants\r\n            data={data}\r\n            pollutants={[\"o3_sub_index\", \"co_sub_index\", \"so2_sub_index\"]}\r\n            stationName={stationName}\r\n            footNote={[\r\n              \"* computed based on 8-hour average Ozone reading (µg/m3)\",\r\n              \"** computed on 8-hour average Carbon Monoxide (CO) reading(mg/m3)\",\r\n              \"*** computed on 24-hour average Sulphur Dioxide (SO2) reading (µg/m3)\",\r\n            ]}\r\n          />\r\n          <TableIndicesCategories index={\"Sub-Index value\"} />\r\n        </div>\r\n      );\r\n    } else {\r\n      content = (\r\n        <div className=\"flex justify-center content-center\">\r\n          <p className=\"p-5\">\r\n            data.gov.sg is under maintenance and we could not download\r\n            the data to generate the plots. Please try again later. Sorry for the inconvenience.\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\nexport default ChartsView;\r\n","import React from \"react\";\r\n\r\nfunction TableIndicesCategories({ index }) {\r\n  return (\r\n    <div className=\"flex mx-auto justify-center py-3\">\r\n      <table className=\"table-auto text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"px-4 py-1\">{index}</th>\r\n            <th className=\"px-4 py-1\">Description</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr className=\"font-medium\" style={{ color: \"#2ca02c\" }}>\r\n            <td className=\"border px-4 py-1\">0 - 50</td>\r\n            <td className=\"border px-4 py-1\">Good</td>\r\n          </tr>\r\n          <tr className=\"font-medium\" style={{ color: \"#1f77b4\" }}>\r\n            {\" \"}\r\n            <td className=\"border px-4 py-1\">51 - 100</td>\r\n            <td className=\"border px-4 py-1\">Moderate</td>\r\n          </tr>\r\n          <tr className=\"font-medium\" style={{ color: \"#fcc105\" }}>\r\n            <td className=\"border px-4 py-1\">101 - 200</td>\r\n            <td className=\"border px-4 py-1\">Unhealthy</td>\r\n          </tr>\r\n          <tr className=\"font-medium\" style={{ color: \"#ff7f0e\" }}>\r\n            <td className=\"border px-4 py-1\">201 - 300</td>\r\n            <td className=\"border px-4 py-1\">Very Unhealthy</td>\r\n          </tr>\r\n          <tr className=\"font-medium\" style={{ color: \"#d62728\" }}>\r\n            <td className=\"border px-4 py-1\">Above 300</td>\r\n            <td className=\"border px-4 py-1\">Hazardous</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableIndicesCategories;\r\n"],"sourceRoot":""}